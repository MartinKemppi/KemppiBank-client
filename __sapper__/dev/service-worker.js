(function () {
	'use strict';

	// This file is generated by Sapper â€” do not edit it!
	const timestamp = 1727948363119;

	const files = [
		"/service-worker-index.html",
		"/favicon.png",
		"/global.css",
		"/logo-192.png",
		"/logo-512.png",
		"/manifest.json",
		"/vendor/bootstrap/bootstrap-grid.css",
		"/vendor/bootstrap/bootstrap-grid.css.map",
		"/vendor/bootstrap/bootstrap-grid.min.css",
		"/vendor/bootstrap/bootstrap-grid.min.css.map",
		"/vendor/bootstrap/bootstrap-grid.rtl.css",
		"/vendor/bootstrap/bootstrap-grid.rtl.css.map",
		"/vendor/bootstrap/bootstrap-grid.rtl.min.css",
		"/vendor/bootstrap/bootstrap-grid.rtl.min.css.map",
		"/vendor/bootstrap/bootstrap-reboot.css",
		"/vendor/bootstrap/bootstrap-reboot.css.map",
		"/vendor/bootstrap/bootstrap-reboot.min.css",
		"/vendor/bootstrap/bootstrap-reboot.min.css.map",
		"/vendor/bootstrap/bootstrap-reboot.rtl.css",
		"/vendor/bootstrap/bootstrap-reboot.rtl.css.map",
		"/vendor/bootstrap/bootstrap-reboot.rtl.min.css",
		"/vendor/bootstrap/bootstrap-reboot.rtl.min.css.map",
		"/vendor/bootstrap/bootstrap-utilities.css",
		"/vendor/bootstrap/bootstrap-utilities.css.map",
		"/vendor/bootstrap/bootstrap-utilities.min.css",
		"/vendor/bootstrap/bootstrap-utilities.min.css.map",
		"/vendor/bootstrap/bootstrap-utilities.rtl.css",
		"/vendor/bootstrap/bootstrap-utilities.rtl.css.map",
		"/vendor/bootstrap/bootstrap-utilities.rtl.min.css",
		"/vendor/bootstrap/bootstrap-utilities.rtl.min.css.map",
		"/vendor/bootstrap/bootstrap.bundle.js",
		"/vendor/bootstrap/bootstrap.bundle.js.map",
		"/vendor/bootstrap/bootstrap.bundle.min.js",
		"/vendor/bootstrap/bootstrap.bundle.min.js.map",
		"/vendor/bootstrap/bootstrap.css",
		"/vendor/bootstrap/bootstrap.css.map",
		"/vendor/bootstrap/bootstrap.esm.js",
		"/vendor/bootstrap/bootstrap.esm.js.map",
		"/vendor/bootstrap/bootstrap.esm.min.js",
		"/vendor/bootstrap/bootstrap.esm.min.js.map",
		"/vendor/bootstrap/bootstrap.js",
		"/vendor/bootstrap/bootstrap.js.map",
		"/vendor/bootstrap/bootstrap.min.css",
		"/vendor/bootstrap/bootstrap.min.css.map",
		"/vendor/bootstrap/bootstrap.min.js",
		"/vendor/bootstrap/bootstrap.min.js.map",
		"/vendor/bootstrap/bootstrap.rtl.css",
		"/vendor/bootstrap/bootstrap.rtl.css.map",
		"/vendor/bootstrap/bootstrap.rtl.min.css",
		"/vendor/bootstrap/bootstrap.rtl.min.css.map",
		"/vendor/bootstrap/css/bootstrap-grid.css",
		"/vendor/bootstrap/css/bootstrap-grid.css.map",
		"/vendor/bootstrap/css/bootstrap-grid.min.css",
		"/vendor/bootstrap/css/bootstrap-grid.min.css.map",
		"/vendor/bootstrap/css/bootstrap-grid.rtl.css",
		"/vendor/bootstrap/css/bootstrap-grid.rtl.css.map",
		"/vendor/bootstrap/css/bootstrap-grid.rtl.min.css",
		"/vendor/bootstrap/css/bootstrap-grid.rtl.min.css.map",
		"/vendor/bootstrap/css/bootstrap-reboot.css",
		"/vendor/bootstrap/css/bootstrap-reboot.css.map",
		"/vendor/bootstrap/css/bootstrap-reboot.min.css",
		"/vendor/bootstrap/css/bootstrap-reboot.min.css.map",
		"/vendor/bootstrap/css/bootstrap-reboot.rtl.css",
		"/vendor/bootstrap/css/bootstrap-reboot.rtl.css.map",
		"/vendor/bootstrap/css/bootstrap-reboot.rtl.min.css",
		"/vendor/bootstrap/css/bootstrap-reboot.rtl.min.css.map",
		"/vendor/bootstrap/css/bootstrap-utilities.css",
		"/vendor/bootstrap/css/bootstrap-utilities.css.map",
		"/vendor/bootstrap/css/bootstrap-utilities.min.css",
		"/vendor/bootstrap/css/bootstrap-utilities.min.css.map",
		"/vendor/bootstrap/css/bootstrap-utilities.rtl.css",
		"/vendor/bootstrap/css/bootstrap-utilities.rtl.css.map",
		"/vendor/bootstrap/css/bootstrap-utilities.rtl.min.css",
		"/vendor/bootstrap/css/bootstrap-utilities.rtl.min.css.map",
		"/vendor/bootstrap/css/bootstrap.css",
		"/vendor/bootstrap/css/bootstrap.css.map",
		"/vendor/bootstrap/css/bootstrap.min.css",
		"/vendor/bootstrap/css/bootstrap.min.css.map",
		"/vendor/bootstrap/css/bootstrap.rtl.css",
		"/vendor/bootstrap/css/bootstrap.rtl.css.map",
		"/vendor/bootstrap/css/bootstrap.rtl.min.css",
		"/vendor/bootstrap/css/bootstrap.rtl.min.css.map",
		"/vendor/bootstrap/js/bootstrap.bundle.js",
		"/vendor/bootstrap/js/bootstrap.bundle.js.map",
		"/vendor/bootstrap/js/bootstrap.bundle.min.js",
		"/vendor/bootstrap/js/bootstrap.bundle.min.js.map",
		"/vendor/bootstrap/js/bootstrap.esm.js",
		"/vendor/bootstrap/js/bootstrap.esm.js.map",
		"/vendor/bootstrap/js/bootstrap.esm.min.js",
		"/vendor/bootstrap/js/bootstrap.esm.min.js.map",
		"/vendor/bootstrap/js/bootstrap.js",
		"/vendor/bootstrap/js/bootstrap.js.map",
		"/vendor/bootstrap/js/bootstrap.min.js",
		"/vendor/bootstrap/js/bootstrap.min.js.map",
		"/vendor/jquery/jquery.js",
		"/vendor/jquery/jquery.min.js",
		"/vendor/jquery/jquery.min.map",
		"/vendor/jquery/jquery.slim.js",
		"/vendor/jquery/jquery.slim.min.js",
		"/vendor/jquery/jquery.slim.min.map"
	];

	const shell = [
		"/client/client.33479c37.js",
		"/client/inject_styles.5607aec6.js",
		"/client/index.29871e13.js",
		"/client/register.5ddb9855.js",
		"/client/about.baae2f3e.js",
		"/client/index.4c7ab5e3.js",
		"/client/_slug_.88d3e10a.js",
		"/client/sapper-dev-client.1e7a4a5e.js"
	];

	const ASSETS = `cache${timestamp}`;

	// `shell` is an array of all the files generated by the bundler,
	// `files` is an array of everything in the `static` directory
	const to_cache = shell.concat(files);
	const staticAssets = new Set(to_cache);

	self.addEventListener('install', event => {
		event.waitUntil(
			caches
				.open(ASSETS)
				.then(cache => cache.addAll(to_cache))
				.then(() => {
					self.skipWaiting();
				})
		);
	});

	self.addEventListener('activate', event => {
		event.waitUntil(
			caches.keys().then(async keys => {
				// delete old caches
				for (const key of keys) {
					if (key !== ASSETS) await caches.delete(key);
				}

				self.clients.claim();
			})
		);
	});


	/**
	 * Fetch the asset from the network and store it in the cache. 
	 * Fall back to the cache if the user is offline.
	 */
	async function fetchAndCache(request) {
		const cache = await caches.open(`offline${timestamp}`);

		try {
			const response = await fetch(request);
			cache.put(request, response.clone());
			return response;
		} catch (err) {
			const response = await cache.match(request);
			if (response) return response;

			throw err;
		}
	}

	self.addEventListener('fetch', event => {
		if (event.request.method !== 'GET' || event.request.headers.has('range')) return;

		const url = new URL(event.request.url);

		// don't try to handle e.g. data: URIs
		const isHttp = url.protocol.startsWith('http');
		const isDevServerRequest = url.hostname === self.location.hostname && url.port !== self.location.port;
		const isStaticAsset = url.host === self.location.host && staticAssets.has(url.pathname);
		const skipBecauseUncached = event.request.cache === 'only-if-cached' && !isStaticAsset;

		if (isHttp && !isDevServerRequest && !skipBecauseUncached) {
			event.respondWith(
				(async () => {
					// always serve static files and bundler-generated assets from cache.
					// if your application has other URLs with data that will never change,
					// set this variable to true for them and they will only be fetched once.
					const cachedAsset = isStaticAsset && await caches.match(event.request);

					// for pages, you might want to serve a shell `service-worker-index.html` file,
					// which Sapper has generated for you. It's not right for every
					// app, but if it's right for yours then uncomment this section
					/*
					if (!cachedAsset && url.origin === self.origin && routes.find(route => route.pattern.test(url.pathname))) {
						return caches.match('/service-worker-index.html');
					}
					*/

					return cachedAsset || fetchAndCache(event.request);
				})()
			);
		}
	});

})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
